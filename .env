# ===== AssistX .env =====
# Copy this file to the project root as `.env` (same folder as docker-compose.yml)

# ---- Neo4j ----
NEO4J_URI=bolt://host.docker.internal:7687
NEO4J_USER=neo4j
# Change this to a strong password; must match the docker-compose Neo4j service
NEO4J_PASSWORD=livelongandprosper

# ---- Ollama ----
# Inside Docker, talk to the ollama service by container name
OLLAMA_HOST=http://host.docker.internal:11434
# Pick a local model you've pulled into the ollama container
OLLAMA_MODEL=gemma2:2b

# ---- API / Execution ----
# SQLite cache for LLM responses inside the container
CACHE_PATH=/app/.assistx_cache.sqlite

# Sandbox limits for the Python tool
PY_MAX_SECONDS=20
PY_MAX_MEM_MB=256

# ---- Dashboard Auth ----
BASIC_AUTH_USER=admin
BASIC_AUTH_PASS=change-me

# ---- Optional: Web search (Tavily). Leave empty to use DuckDuckGo.
TAVILY_API_KEY=

# ---- Redis / Queue ----
REDIS_URL=redis://redis:6379/0

API_TOKEN=           # optional; set to require x-api-token for /upload-audio
CORS_ALLOW_ORIGINS=*

WHISPER_DEVICE=auto
WHISPER_COMPUTE_TYPE=int8